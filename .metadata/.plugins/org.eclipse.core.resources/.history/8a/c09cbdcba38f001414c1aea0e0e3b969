package com.switchit001.qaapp;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.FileBody;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.Toast;

public class MsgActivity extends Activity {
	public static final String ROOT_ADDR = "http://dev.qa.switchit001.com/dev2/request.php"; 
	public static final int MSG_ID = 1;
	SharedPreferences sharedPrefs;
	EditText titleField, msgField;
	Spinner dropdownMenu;
	Button button;
	ImageView imgView;
	String url, sessionKey;
	Bitmap bitmap;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_msg);
		/************************************/
		dropdownMenu = (Spinner) findViewById(R.id.spinner1);
		button = (Button) findViewById(R.id.button1);
		imgView = (ImageView) findViewById(R.id.pic_view);
		titleField = (EditText) findViewById(R.id.title_field);
		msgField = (EditText) findViewById(R.id.msg_field);
		/************************************/
		sharedPrefs = this.getSharedPreferences("com.switchit001.qaapp", Context.MODE_PRIVATE);
		sessionKey = sharedPrefs.getString("sessionKey", "NULL");

		bitmap = PictUtil.loadFromCacheFile();
		if(bitmap == null)
			Log.e("QA_APP", "NULL :(");
		imgView.setImageBitmap(bitmap);

		button.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				if(titleField.getText().toString().matches("") || msgField.getText().toString().matches(""))
					Toast.makeText(getApplicationContext(), "Please fill in both fields", Toast.LENGTH_SHORT).show();
				else {
					url = ROOT_ADDR 
							+ "?session=" + sessionKey
							+ "&msgId=2"
							+ "&par0=Trent%20pls"// + titleField.getText().toString()
							+ "&par1=1"
							+ "&par2=Dis%20work?"// +msgField.getText().toString()
							+ "&par3=1";
					Log.d("QA_APP", url);
					new AsyncHandler().execute(url);
				}
			}
		});


	}


	private class AsyncHandler extends AsyncTask<String, Void, Void>
	{

		@Override
		protected void onPreExecute() {
			super.onPreExecute();

		}

		@SuppressWarnings("deprecation")
		@Override
		protected Void doInBackground(String... params) {
			JSONObject jObj = null;
			HttpClient httpClient = new DefaultHttpClient(new BasicHttpParams());
			HttpPost httpPost = new HttpPost(params[0]); //params[0] is passed in as the built url
			httpPost.setHeader("Content-type", "application/json");
			InputStream inputStream = null;
			String result = null;

//			MultipartEntity multipartEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE); 
//			multipartEntity.addPart("IMAGE", new FileBody(new File(PictUtil.getCacheFilename())));
//			httpPost.setEntity(multipartEntity);

			try {
				HttpResponse response = httpClient.execute(httpPost);           
				HttpEntity entity = response.getEntity();

				inputStream = entity.getContent();
				BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, "UTF-8"), 64);
				StringBuilder sb = new StringBuilder();

				String line = null;
				while ((line = reader.readLine()) != null) {
					sb.append(line + "\n");
				}
				result = sb.toString();
			} catch (IllegalStateException e) { 
				e.printStackTrace();
			} catch (ClientProtocolException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
			finally {
				try{if(inputStream != null)inputStream.close();}catch(Exception e){}
			}
			Log.d("QA_APP", result);

			return null;

		}

		protected void onPostExecute(Void result) {

		}
	}



}
